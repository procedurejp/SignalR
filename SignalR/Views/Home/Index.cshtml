@{
    ViewBag.Title = "Home Page";
}

<script src="https://code.jquery.com/jquery-3.6.0.js"></script>

<main>
    <h2>Chat</h2>
    <div class="container">
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
        <ul id="discussion">
        </ul>
    </div>
</main>

<div id="result"></div>
<button id="myButton">Click me</button>
@section scripts{
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script>
        //let chathub = $.connection.ChatHub;
        //chathub.client.Hello = function () {
        //    console.log("test")
        //};
        $(function () {
            
            // 建立 SignalR 連接
            var connection = $.hubConnection();
            var chatHub = connection.createHubProxy('ChartHub');
            var countVal = 0;
            // 註冊 HubCallBack 方法
            chatHub.on('HubCallBack', function (message) {
                // 在這裡處理從 HubCallBack 方法接收到的訊息
                console.log(message);
                countVal++;
                $('#result').text(message + countVal);
            });
            // 啟動 SignalR 連接
            connection.start();

            $('#myButton').click(function () {
                // 呼叫 Hello 方法並傳遞一個訊息
                chatHub.invoke('Hello', 'Message from button click');
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            // Reference the auto-generated proxy for the hub.

            var connection = $.hubConnection();
            var chat = connection.createHubProxy('ChartHub');
            
            // Create a function that the hub can call back to display messages.
            chat.on("addNewMessageToPage", function (name, message) {
                // Add the message to the page.
                var discussion = document.getElementById('discussion');
                var listItem = document.createElement('li');
                listItem.innerHTML = '<strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message);
                discussion.appendChild(listItem);
            });

            // Get the user name and store it to prepend to messages.
            var displayName = prompt('Enter your name:', '');

            // Set initial focus to message input box.
            var messageInput = document.getElementById('message');
            messageInput.focus();

            // Start the connection.
            connection.start().done(function () {
                document.getElementById('sendmessage').addEventListener('click', function () {
                    // Call the Send method on the hub.
                    chat.invoke("send", displayName, messageInput.value);
                    // Clear text box and reset focus for the next comment.
                    messageInput.value = '';
                    messageInput.focus();
                });
            }).catch(function (err) {
                return console.error(err.toString());
            });

            // This optional function html-encodes messages for display on the page.
            function htmlEncode(value) {
                var encodedValue = document.createElement('div');
                encodedValue.innerText = value;
                return encodedValue.innerHTML;
            }
        });
        
    </script>
}